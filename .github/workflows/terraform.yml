name: Deploy

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get short sha
      uses: benjlevesque/short-sha@v2.2
      id: short-sha
      with:
        length: 6

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          sashkashishka/pgi-front
          sashkashishka/pgi-strapi

    - name: Build and push front image
      uses: docker/build-push-action@v4
      with:
        context: ./front
        file: ./front/Dockerfile
        push: true
        tags: sashkashishka/pgi-front:${{ steps.short-sha.outputs.sha }}

    - name: Build and push strapi image
      uses: docker/build-push-action@v4
      with:
        context: ./strapi
        file: ./strapi/Dockerfile
        push: true
        tags: sashkashishka/pgi-strapi:${{ steps.short-sha.outputs.sha }}


    # - name: Extract metadata (tags, labels) for Docker
    #   id: meta
    #   uses: docker/metadata-action@v4
    #   with:
    #     images: sashkashishka/parser

    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v4
    #   with:
    #     context: .
    #     file: ./Dockerfile
    #     push: true
    #     tags: sashkashishka/parser:latest

    # - name: Setup Terraform
    #   uses: hashicorp/setup-terraform@v1

    # - name: Terraform Init
    #   run: terraform init

    # - name: Terraform Format
    #   run: terraform fmt -check

    # - name: Terraform Apply
    #   run: |
    #     terraform apply -auto-approve -input=false \
    #     -var prisma_database=${{ secrets.PRISMA_DATABASE}} \
    #     -var prisma_user=${{ secrets.PRISMA_USER }} \
    #     -var prisma_password=${{ secrets.PRISMA_PASSWORD}} \
    #     -var mysql_root_password=${{ secrets.MYSQL_ROOT_PASSWORD }} \
    #     -var docker_username=${{ secrets.DOCKER_USERNAME }} \
    #     -var jwt_secret=${{ secrets.JWT_SECRET }} \
    #     -var hash_salt=${{ secrets.HASH_SALT }} \
    #     -var nomad_token=${{ secrets.NOMAD_TOKEN }} \
    #     -var commit_hash=${{ github.sha }} \
    #     -var nomad_addr=${{ secrets.NOMAD_ADDR }} \
    #     -var node_env=production
